#! /usr/bin/env python

import intro_to_autonomy.project1.rmpl as rmpl
import intro_to_autonomy.project1.environment as environment
import intro_to_autonomy.project1.path_planner as path_planner

import argparse

def main(rmpl_in_filename, rmpl_out_filename, env_file, paths_out_filename, class_name):
    env = environment.Environment(env_file)
    pp = getattr(path_planner, class_name)(env.bounds, env, 0.1)
    preproc = rmpl.RMPLPreProcessor(rmpl_in_filename, env, pp.path)
    rmpl_out_file = open(rmpl_out_filename, 'w')
    rmpl_string, paths = preproc.preprocess()
    rmpl_out_file.write(rmpl_string)
    rmpl_out_file.close()
    paths_out_file = open(paths_out_filename, 'w')
    paths_out_file.write(paths)
    paths_out_file.close()

if __name__=='__main__':
    parser = argparse.ArgumentParser(description="Preprocess an RMPL file.")
    parser.add_argument('input_rmpl_file', help='the input RMPL file to preprocess.')
    parser.add_argument('environment_file', help='The location of the environment file.')
    parser.add_argument('path_planner_class', help='The class name of the path planner to use.')
    parser.add_argument('output_rmpl_file', help="Where to save the preprocessed RMPL.")
    parser.add_argument('paths_out_file', help="Where to save the paths.")
    args = parser.parse_args()
    main(args.input_rmpl_file,
         args.output_rmpl_file,
         args.environment_file,
         args.paths_out_file,
         args.path_planner_class)
